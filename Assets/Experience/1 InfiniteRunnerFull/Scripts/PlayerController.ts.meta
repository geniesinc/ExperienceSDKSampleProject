fileFormatVersion: 2
guid: a8ecc0ff452304eee9647478df7ede7c
ScriptedImporter:
  internalIDToNameTable: []
  externalObjects: {}
  serializedVersion: 2
  userData: 
  assetBundleName: 
  assetBundleVariant: 
  script: {fileID: 11500000, guid: 22604dd76f55453daccee3ed9e7b94b5, type: 3}
  SerializedAsset: '{"IsCompiled":true,"CompilerVersion":"2.0.63","ReferencedSpecifiers":["@assets/Experience/1
    InfiniteRunnerFull/Scripts/GameManager"],"Source":"\"use strict\";\nObject.defineProperty(exports,
    \"__esModule\", { value: true });\nconst UnityEngine_1 = require(\"UnityEngine\");\nconst
    Genies_Avatars_Sdk_1 = require(\"Genies.Avatars.Sdk\");\nconst GameManager_1
    = require(\"@assets/Experience/1 InfiniteRunnerFull/Scripts/GameManager\");\nclass
    PlayerController extends UnityEngine_1.MonoBehaviour {\n    constructor() {\n       
    super(...arguments);\n        this.playerSpeed = 2;\n        this.jumpForce =
    5;\n        this.swipeThreshold = 50.0; // Minimum swipe distance\n        /**\n        
    * This can only be one of three lanes the player can target to move:\n        
    * * -1 is the left lane\n         * * 0 is the middle lane\n         * * 1 is
    the right lane\n        */\n        this.targetLane = 0;\n        this.swipeDetected
    = false;\n        this.canMove = false;\n    }\n    async Start() {\n       
    //Get GameManager singleton and add a listener to OnGameStateChange event\n       
    this.gameManager = GameManager_1.default.Instance;\n        this.gameManager.OnGameStateChange.addListener(this.CheckGameState,
    //@ts-ignore\n        this);\n        //Initialize the SDK\n        await $promise(Genies_Avatars_Sdk_1.GeniesAvatarsSdk.InitializeAsync());\n       
    //Load the user Avatar\n        this.userAvatar = await $promise(Genies_Avatars_Sdk_1.GeniesAvatarsSdk.LoadUserAvatarAsync(\"UserAvatar\",
    this.transform, this.playerAnimator));\n        this.StartCoroutine(this.WaitForAvatar());\n       
    this.playerRigidbody = this.GetComponent($typeof(UnityEngine_1.Rigidbody));\n   
    }\n    Update() {\n        //If game is playing, check for touch swipe and move
    player accordingly\n        if (this.canMove) {\n            this.CheckSwipe();\n           
    this.MovePlayer();\n        }\n    }\n    /** Manages the player logic when the
    game state changes. @param newState */\n    CheckGameState(newState) {\n       
    switch (newState) {\n            case GameManager_1.GameState.GAME_PLAY:\n               
    this.OnGamePlay();\n                break;\n            case GameManager_1.GameState.GAME_OVER:\n               
    this.OnGameOver();\n                break;\n        }\n    }\n    /** This will
    manage the player once the game starts. */\n    OnGamePlay() {\n        this.canMove
    = true;\n        //this.transform.position = Vector3.zero;\n        this.targetLane
    = 0;\n        // @ts-ignore\n        this.userAvatar.Animator.SetFloat_EBB7509C_H45FF9778((\"idle_run_walk\"),
    (1));\n    }\n    /** Determines if the mouse swipes and sets a new target lane
    based on direction. */\n    CheckSwipe() {\n        if (UnityEngine_1.Input.touchCount
    > 0) {\n            let touch = UnityEngine_1.Input.GetTouch(0);\n           
    switch (touch.phase) {\n                case UnityEngine_1.TouchPhase.Began:\n                   
    this.startTouchPosition = touch.position;\n                    this.swipeDetected
    = false;\n                    break;\n                case UnityEngine_1.TouchPhase.Moved:\n                   
    this.currentTouchPosition = touch.position;\n                    let deltaPosition
    = UnityEngine_1.Vector2.op_Subtraction(this.currentTouchPosition, this.startTouchPosition);\n                   
    if (deltaPosition.magnitude > this.swipeThreshold && !this.swipeDetected) {\n                       
    let x = deltaPosition.x;\n                        let y = deltaPosition.y;\n                       
    if ( // @ts-ignore\n                        UnityEngine_1.Mathf.Abs_EBB7509C_H82424F3E(x)
    > // @ts-ignore\n                            UnityEngine_1.Mathf.Abs_EBB7509C_H82424F3E(y))
    {\n                            if (x > 0) {\n                               
    this.OnSwipeRight();\n                            }\n                           
    else {\n                                this.OnSwipeLeft();\n                           
    }\n                        }\n                        this.startTouchPosition
    = this.currentTouchPosition; //prevent multiple swipes from one touch.\n                       
    this.swipeDetected = true;\n                    }\n                    break;\n               
    case UnityEngine_1.TouchPhase.Ended:\n                    this.swipeDetected
    = false;\n                    break;\n                case UnityEngine_1.TouchPhase.Canceled:\n                   
    this.swipeDetected = false;\n                    break;\n            }\n       
    }\n    }\n    OnSwipeRight() {\n        if (this.targetLane < 1) {\n           
    this.targetLane++;\n        }\n    }\n    OnSwipeLeft() {\n        if (this.targetLane
    > -1) {\n            this.targetLane--;\n        }\n    }\n    /** Moves the
    player towards the target lane. */\n    MovePlayer() {\n        let playerPos
    = this.transform.position;\n        let targetPos = new UnityEngine_1.Vector3(this.targetLane,
    playerPos.y, playerPos.z);\n        let newPos = UnityEngine_1.Vector3.MoveTowards(playerPos,
    targetPos, this.playerSpeed * UnityEngine_1.Time.deltaTime);\n        this.transform.position
    = newPos;\n    }\n    OnTriggerEnter(coll) {\n        //End game if colliding
    with enemy\n        if (coll.gameObject.tag == \"Enemy\") {\n            coll.gameObject.SetActive(false);\n           
    this.canMove = false;\n            // @ts-ignore\n            this.userAvatar.Animator.SetFloat_EBB7509C_H45FF9778((\"idle_run_walk\"),
    (0));\n            this.userAvatar.Animator.SetTrigger(\"slip\");\n           
    this.gameManager.ChangeGameState(GameManager_1.GameState.GAME_OVER);\n       
    }\n    }\n    OnCollisionEnter(coll) {\n        //End game if colliding with
    enemy\n        if (coll.gameObject.tag == \"Enemy\") {\n            coll.gameObject.SetActive(false);\n           
    this.canMove = false;\n            // @ts-ignore\n            this.userAvatar.Animator.SetFloat_EBB7509C_H45FF9778((\"idle_run_walk\"),
    (0));\n            this.userAvatar.Animator.SetTrigger(\"slip\");\n           
    this.gameManager.ChangeGameState(GameManager_1.GameState.GAME_OVER);\n       
    }\n    }\n    /** This will manage the player once the game ends. */\n    OnGameOver()
    {\n        // Not implemented\n    }\n    *WaitForAvatar() {\n        while (!this.userAvatar)
    {\n            yield null;\n        }\n        UnityEngine_1.Debug.Log(\"Avatar
    Loaded\");\n        this.gameManager.ChangeGameState(GameManager_1.GameState.LOADING);\n   
    }\n}\nexports.default = PlayerController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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V0FBVyxHQUFHLGtCQUFJLENBQUMsU0FBUyxDQUFDO1FBQ3pGLElBQUksQ0FBQyxTQUFTLENBQUMsUUFBUSxHQUFHLE1BQU07SUFDcEM7SUFFQSxjQUFjLENBQUMsSUFBYztRQUN6QixrQ0FBaUM7UUFDakMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsSUFBSSxPQUFPLEVBQUU7WUFDaEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO1lBRWhDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSztZQUNyQjtZQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLDJCQUFPLENBQUMsQ0FBQyxlQUFjLENBQUMsR0FBRSxFQUFDLENBQUM7WUFDckQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztZQUUzQyxJQUFJLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyx1QkFBUyxDQUFDLFNBQVMsQ0FBQztRQUN6RDtJQUNKO0lBR0EsZ0JBQWdCLENBQUMsSUFBZTtRQUM1QixrQ0FBaUM7UUFDakMsSUFBSSxJQUFJLENBQUMsVUFBVSxDQUFDLEdBQUcsSUFBSSxPQUFPLEVBQUU7WUFDaEMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDO1lBRWhDLElBQUksQ0FBQyxPQUFPLEdBQUcsS0FBSztZQUNyQjtZQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLDJCQUFPLENBQUMsQ0FBQyxlQUFjLENBQUMsR0FBRSxFQUFDLENBQUM7WUFDckQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQztZQUUzQyxJQUFJLENBQUMsV0FBVyxDQUFDLGVBQWUsQ0FBQyx1QkFBUyxDQUFDLFNBQVMsQ0FBQztRQUN6RDtJQUNKO0lBRUEsc0RBQXFEO0lBQzdDLFVBQVU7UUFDZCxrQkFBaUI7SUFDckI7SUFFUSxDQUFDLGFBQWE7UUFDbEIsT0FBTSxDQUFDLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDcEIsTUFBTSxJQUFJO1FBQ2Q7UUFDQSxtQkFBSyxDQUFDLEdBQUcsQ0FBQyxlQUFlLENBQUM7UUFDMUIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxlQUFlLENBQUMsdUJBQVMsQ0FBQyxPQUFPLENBQUM7SUFDdkQ7Q0FHSjtBQW5MQSxtQ0FtTEEiLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VzIjpbIlBsYXllckNvbnRyb2xsZXIudHMiXSwic291cmNlc0NvbnRlbnQiOltudWxsXX0=","ScriptHash":"16cea76702b180b45e16d3ece1650eb9","Specifier":"@assets/Experience/1
    InfiniteRunnerFull/Scripts/PlayerController","DefaultTypeName":"@assets/Experience/1
    InfiniteRunnerFull/Scripts/PlayerController.PlayerController","IsMonobehaviour":true,"IsScriptableObj":false,"InheritanceChain":["@assets/Experience/1
    InfiniteRunnerFull/Scripts/PlayerController.PlayerController","UnityEngine.MonoBehaviour","UnityEngine.Behaviour","UnityEngine.Component","UnityEngine.Object","@com.genies.scripting@1.11.0/Runtime/Typing/index.d.System.Object"],"Properties":[{"Path":"playerSpeed","Name":"playerSpeed","TypeName":"System.Single","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"Header","Args":["\"Player
    Settings\""]},{"Type":"SerializeField","Args":[]}],"Initializers":["2"],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Player
    Speed","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"jumpForce","Name":"jumpForce","TypeName":"System.Single","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":["5"],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Jump
    Force","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"playerAnimator","Name":"playerAnimator","TypeName":"UnityEngine.RuntimeAnimatorController","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":[],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Player
    Animator","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null},{"Path":"swipeThreshold","Name":"swipeThreshold","TypeName":"System.Single","AssemblyName":null,"EnumKeys":[],"EnumValues":[],"IsGeniesBehaviourRef":false,"IsGeniesScriptableObjectRef":false,"Decorators":[{"Type":"SerializeField","Args":[]}],"Initializers":["50.0"],"ArrayDimension":-1,"IsArray":false,"IsEnum":false,"ArrayElementInitializer":null,"ChildProperties":[],"PrettyName":"Swipe
    Threshold","_arrayElementInitializerJson":null,"_childPropertiesJson":"[]","_prettyName":null}],"SupportedUiEvents":"None","DisplayName":"PlayerController","name":"PlayerController","hideFlags":"NotEditable"}'
